buildscript {
    ext {
        appVersion                      = "1.0.0-alpha.1-SNAPSHOT"
        springBootVersion               = "2.4.0"
        springVersion                   = "5.3.1"
        myBatisSpringBootStarterVersion = "2.1.3"
        springDependencyMngVer          = "1.0.10.RELEASE"
        logBackVersion                  = "1.2.3"
        junitBomVersion                 = "5.6.2"
        mysqlConnectorVersion           = "8.0.21"
        gkmdkStarterVersion             = "1.0.0-alpha.3"
        sampleApplicationRuleVersion    = "1.0.0"
        inHouseMavenRepoUrl             = "https://kinto-repo-342274811455.d.codeartifact.ap-northeast-1.amazonaws.com/maven/gk_lease_repo/"
        dependencyCheckVersion          = "6.0.3"
        sonarqubeVersion                = "3.0"
        jibVersion                      = "2.7.1"
        checkstyleVersion               = "8.41"
        checkstyleConfigFile            = "coding-style/kinto_global_checks.xml"
        dependencyCheckCveValidForHours = "12"
        baseImage                       = "342274811455.dkr.ecr.ap-northeast-1.amazonaws.com/infra/java:adoptopenjdk-hotspot-alpine-slim-11.0.9.1_1"
        testIgnorreFailures             = false
        springdocOpenapiUiVersion       = "1.5.2"
        restAssuredVersion              = "4.2.0"
        dbunitVersion                   = "2.7.0"
        springTestDbunitVersion         = "1.3.0"
        jsonUnitVersion                 = "2.24.0"
        poiVersion                      = "4.0.0"
        awsJavaSdkVersion               = "1.11.853"
        pagehelperVersion               = "5.1.8"
        mybatisGeneratorVersion         = "1.4.0"
        gsnoVerson                      = "2.8.6"
        mockitoInline                   = "3.9.0"
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:${jibVersion}"
        classpath "org.owasp:dependency-check-gradle:${dependencyCheckVersion}"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${sonarqubeVersion}"
    }
}

plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.springframework', name: 'spring-context', version: "$springVersion"
    implementation group: 'org.springframework', name: 'spring-tx', version: "$springVersion"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "$springBootVersion"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: "$springBootVersion"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: "$springBootVersion"

    implementation group: 'org.freemarker', name: 'freemarker', version: '2.3.23'


    implementation group: 'mysql', name: 'mysql-connector-java', version: "$mysqlConnectorVersion"
    implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: "$myBatisSpringBootStarterVersion"
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: "$logBackVersion"
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: "$springdocOpenapiUiVersion"
    implementation group: 'org.apache.poi', name: 'poi', version: "$poiVersion"
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: "$poiVersion"
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-ses', version: "$awsJavaSdkVersion"
    implementation "com.github.pagehelper:pagehelper:$pagehelperVersion"
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: "$mybatisGeneratorVersion"
    implementation group: 'com.google.code.gson', name: 'gson', version: "$gsnoVerson"
    implementation group: 'com.alibaba', name: 'fastjson', version: '1.2.75'

    testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "$springBootVersion"){
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter-test', version: "$myBatisSpringBootStarterVersion"
    testImplementation platform(group: 'org.junit', name: 'junit-bom', version: "$junitBomVersion")
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter'

    testImplementation group: 'org.mockito', name: 'mockito-inline', version: "$mockitoInline"
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: "$restAssuredVersion"
    testImplementation group: 'io.rest-assured', name: 'json-path', version: "$restAssuredVersion"
    testImplementation group: 'io.rest-assured', name: 'xml-path', version: "$restAssuredVersion"
    testImplementation group: 'net.javacrumbs.json-unit', name: 'json-unit', version: "$jsonUnitVersion"
    testImplementation group: 'org.dbunit', name: 'dbunit', version: "$dbunitVersion"
    testImplementation group: 'com.github.springtestdbunit', name: 'spring-test-dbunit', version: "$springTestDbunitVersion"
}

test {
    useJUnitPlatform()
}